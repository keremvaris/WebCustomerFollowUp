//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_Job_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Customer), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.Job), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_Phones_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Customer), "Phones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.Phones), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_stok_Beden", "Beden", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Beden), "stok", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.stok), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_stok_Renk", "Renk", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Renk), "stok", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.stok), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_stok_Urun", "Urun", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Urun), "stok", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.stok), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_Satis_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.Customer), "Satis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.Satis), true)]
[assembly: EdmRelationshipAttribute("WebCustomerFollowUpModel", "FK_Satis_stok", "stok", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebCustomerFollowUp.Models.stok), "Satis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebCustomerFollowUp.Models.Satis), true)]

#endregion

namespace WebCustomerFollowUp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WebCustomerFollowUpEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WebCustomerFollowUpEntities object using the connection string found in the 'WebCustomerFollowUpEntities' section of the application configuration file.
        /// </summary>
        public WebCustomerFollowUpEntities() : base("name=WebCustomerFollowUpEntities", "WebCustomerFollowUpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebCustomerFollowUpEntities object.
        /// </summary>
        public WebCustomerFollowUpEntities(string connectionString) : base(connectionString, "WebCustomerFollowUpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebCustomerFollowUpEntities object.
        /// </summary>
        public WebCustomerFollowUpEntities(EntityConnection connection) : base(connection, "WebCustomerFollowUpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Job
        {
            get
            {
                if ((_Job == null))
                {
                    _Job = base.CreateObjectSet<Job>("Job");
                }
                return _Job;
            }
        }
        private ObjectSet<Job> _Job;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phones> Phones
        {
            get
            {
                if ((_Phones == null))
                {
                    _Phones = base.CreateObjectSet<Phones>("Phones");
                }
                return _Phones;
            }
        }
        private ObjectSet<Phones> _Phones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Beden> Beden
        {
            get
            {
                if ((_Beden == null))
                {
                    _Beden = base.CreateObjectSet<Beden>("Beden");
                }
                return _Beden;
            }
        }
        private ObjectSet<Beden> _Beden;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Renk> Renk
        {
            get
            {
                if ((_Renk == null))
                {
                    _Renk = base.CreateObjectSet<Renk>("Renk");
                }
                return _Renk;
            }
        }
        private ObjectSet<Renk> _Renk;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<stok> stok
        {
            get
            {
                if ((_stok == null))
                {
                    _stok = base.CreateObjectSet<stok>("stok");
                }
                return _stok;
            }
        }
        private ObjectSet<stok> _stok;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Urun> Urun
        {
            get
            {
                if ((_Urun == null))
                {
                    _Urun = base.CreateObjectSet<Urun>("Urun");
                }
                return _Urun;
            }
        }
        private ObjectSet<Urun> _Urun;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Satis> Satis
        {
            get
            {
                if ((_Satis == null))
                {
                    _Satis = base.CreateObjectSet<Satis>("Satis");
                }
                return _Satis;
            }
        }
        private ObjectSet<Satis> _Satis;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Job EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJob(Job job)
        {
            base.AddObject("Job", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Phones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhones(Phones phones)
        {
            base.AddObject("Phones", phones);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Beden EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBeden(Beden beden)
        {
            base.AddObject("Beden", beden);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Renk EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRenk(Renk renk)
        {
            base.AddObject("Renk", renk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the stok EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostok(stok stok)
        {
            base.AddObject("stok", stok);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Urun EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUrun(Urun urun)
        {
            base.AddObject("Urun", urun);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Satis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSatis(Satis satis)
        {
            base.AddObject("Satis", satis);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Beden")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Beden : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Beden object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Beden CreateBeden(global::System.Int32 id)
        {
            Beden beden = new Beden();
            beden.id = id;
            return beden;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String beden1
        {
            get
            {
                return _beden1;
            }
            set
            {
                Onbeden1Changing(value);
                ReportPropertyChanging("beden1");
                _beden1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("beden1");
                Onbeden1Changed();
            }
        }
        private global::System.String _beden1;
        partial void Onbeden1Changing(global::System.String value);
        partial void Onbeden1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Beden", "stok")]
        public EntityCollection<stok> stok
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Beden", "stok");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Beden", "stok", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Customer CreateCustomer(global::System.Int32 id)
        {
            Customer customer = new Customer();
            customer.ID = id;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Job_Customer", "Job")]
        public EntityCollection<Job> Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("WebCustomerFollowUpModel.FK_Job_Customer", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("WebCustomerFollowUpModel.FK_Job_Customer", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Phones_Customer", "Phones")]
        public EntityCollection<Phones> Phones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phones>("WebCustomerFollowUpModel.FK_Phones_Customer", "Phones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phones>("WebCustomerFollowUpModel.FK_Phones_Customer", "Phones", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Satis_Customer", "Satis")]
        public EntityCollection<Satis> Satis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Satis>("WebCustomerFollowUpModel.FK_Satis_Customer", "Satis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Satis>("WebCustomerFollowUpModel.FK_Satis_Customer", "Satis", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Job CreateJob(global::System.Int32 id)
        {
            Job job = new Job();
            job.ID = id;
            return job;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job1
        {
            get
            {
                return _Job1;
            }
            set
            {
                OnJob1Changing(value);
                ReportPropertyChanging("Job1");
                _Job1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Job1");
                OnJob1Changed();
            }
        }
        private global::System.String _Job1;
        partial void OnJob1Changing(global::System.String value);
        partial void OnJob1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Job_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Job_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Job_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Job_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Job_Customer", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Phones")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phones : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phones object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Phones CreatePhones(global::System.Int32 id, global::System.Boolean status)
        {
            Phones phones = new Phones();
            phones.ID = id;
            phones.Status = status;
            return phones;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Phones_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Phones_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Phones_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Phones_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Phones_Customer", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Renk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Renk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Renk object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Renk CreateRenk(global::System.Int32 id)
        {
            Renk renk = new Renk();
            renk.id = id;
            return renk;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String renk1
        {
            get
            {
                return _renk1;
            }
            set
            {
                Onrenk1Changing(value);
                ReportPropertyChanging("renk1");
                _renk1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("renk1");
                Onrenk1Changed();
            }
        }
        private global::System.String _renk1;
        partial void Onrenk1Changing(global::System.String value);
        partial void Onrenk1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Renk", "stok")]
        public EntityCollection<stok> stok
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Renk", "stok");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Renk", "stok", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Satis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Satis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Satis object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Satis CreateSatis(global::System.Int32 id)
        {
            Satis satis = new Satis();
            satis.id = id;
            return satis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> musid
        {
            get
            {
                return _musid;
            }
            set
            {
                OnmusidChanging(value);
                ReportPropertyChanging("musid");
                _musid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("musid");
                OnmusidChanged();
            }
        }
        private Nullable<global::System.Int32> _musid;
        partial void OnmusidChanging(Nullable<global::System.Int32> value);
        partial void OnmusidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> birimfiyat
        {
            get
            {
                return _birimfiyat;
            }
            set
            {
                OnbirimfiyatChanging(value);
                ReportPropertyChanging("birimfiyat");
                _birimfiyat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birimfiyat");
                OnbirimfiyatChanged();
            }
        }
        private Nullable<global::System.Decimal> _birimfiyat;
        partial void OnbirimfiyatChanging(Nullable<global::System.Decimal> value);
        partial void OnbirimfiyatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> miktar
        {
            get
            {
                return _miktar;
            }
            set
            {
                OnmiktarChanging(value);
                ReportPropertyChanging("miktar");
                _miktar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("miktar");
                OnmiktarChanged();
            }
        }
        private Nullable<global::System.Int32> _miktar;
        partial void OnmiktarChanging(Nullable<global::System.Int32> value);
        partial void OnmiktarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stokid
        {
            get
            {
                return _stokid;
            }
            set
            {
                OnstokidChanging(value);
                ReportPropertyChanging("stokid");
                _stokid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stokid");
                OnstokidChanged();
            }
        }
        private Nullable<global::System.Int32> _stokid;
        partial void OnstokidChanging(Nullable<global::System.Int32> value);
        partial void OnstokidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> toplam
        {
            get
            {
                return _toplam;
            }
            set
            {
                OntoplamChanging(value);
                ReportPropertyChanging("toplam");
                _toplam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("toplam");
                OntoplamChanged();
            }
        }
        private Nullable<global::System.Decimal> _toplam;
        partial void OntoplamChanging(Nullable<global::System.Decimal> value);
        partial void OntoplamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Alınan
        {
            get
            {
                return _Alınan;
            }
            set
            {
                OnAlınanChanging(value);
                ReportPropertyChanging("Alınan");
                _Alınan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alınan");
                OnAlınanChanged();
            }
        }
        private Nullable<global::System.Decimal> _Alınan;
        partial void OnAlınanChanging(Nullable<global::System.Decimal> value);
        partial void OnAlınanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> alacak
        {
            get
            {
                return _alacak;
            }
            set
            {
                OnalacakChanging(value);
                ReportPropertyChanging("alacak");
                _alacak = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("alacak");
                OnalacakChanged();
            }
        }
        private Nullable<global::System.Decimal> _alacak;
        partial void OnalacakChanging(Nullable<global::System.Decimal> value);
        partial void OnalacakChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SatisTarihi
        {
            get
            {
                return _SatisTarihi;
            }
            set
            {
                OnSatisTarihiChanging(value);
                ReportPropertyChanging("SatisTarihi");
                _SatisTarihi = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SatisTarihi");
                OnSatisTarihiChanged();
            }
        }
        private Nullable<global::System.DateTime> _SatisTarihi;
        partial void OnSatisTarihiChanging(Nullable<global::System.DateTime> value);
        partial void OnSatisTarihiChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Satis_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Satis_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Satis_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Satis_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("WebCustomerFollowUpModel.FK_Satis_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Satis_stok", "stok")]
        public stok stok
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stok>("WebCustomerFollowUpModel.FK_Satis_stok", "stok").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stok>("WebCustomerFollowUpModel.FK_Satis_stok", "stok").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<stok> stokReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stok>("WebCustomerFollowUpModel.FK_Satis_stok", "stok");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<stok>("WebCustomerFollowUpModel.FK_Satis_stok", "stok", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="stok")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class stok : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new stok object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static stok Createstok(global::System.Int32 id)
        {
            stok stok = new stok();
            stok.id = id;
            return stok;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> r_id
        {
            get
            {
                return _r_id;
            }
            set
            {
                Onr_idChanging(value);
                ReportPropertyChanging("r_id");
                _r_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("r_id");
                Onr_idChanged();
            }
        }
        private Nullable<global::System.Int32> _r_id;
        partial void Onr_idChanging(Nullable<global::System.Int32> value);
        partial void Onr_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> b_id
        {
            get
            {
                return _b_id;
            }
            set
            {
                Onb_idChanging(value);
                ReportPropertyChanging("b_id");
                _b_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("b_id");
                Onb_idChanged();
            }
        }
        private Nullable<global::System.Int32> _b_id;
        partial void Onb_idChanging(Nullable<global::System.Int32> value);
        partial void Onb_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> u_id
        {
            get
            {
                return _u_id;
            }
            set
            {
                Onu_idChanging(value);
                ReportPropertyChanging("u_id");
                _u_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("u_id");
                Onu_idChanged();
            }
        }
        private Nullable<global::System.Int32> _u_id;
        partial void Onu_idChanging(Nullable<global::System.Int32> value);
        partial void Onu_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> adet
        {
            get
            {
                return _adet;
            }
            set
            {
                OnadetChanging(value);
                ReportPropertyChanging("adet");
                _adet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("adet");
                OnadetChanged();
            }
        }
        private Nullable<global::System.Int32> _adet;
        partial void OnadetChanging(Nullable<global::System.Int32> value);
        partial void OnadetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StokAdi
        {
            get
            {
                return _StokAdi;
            }
            set
            {
                OnStokAdiChanging(value);
                ReportPropertyChanging("StokAdi");
                _StokAdi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StokAdi");
                OnStokAdiChanged();
            }
        }
        private global::System.String _StokAdi;
        partial void OnStokAdiChanging(global::System.String value);
        partial void OnStokAdiChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Beden", "Beden")]
        public Beden Beden
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beden>("WebCustomerFollowUpModel.FK_stok_Beden", "Beden").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beden>("WebCustomerFollowUpModel.FK_stok_Beden", "Beden").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beden> BedenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beden>("WebCustomerFollowUpModel.FK_stok_Beden", "Beden");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beden>("WebCustomerFollowUpModel.FK_stok_Beden", "Beden", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Renk", "Renk")]
        public Renk Renk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Renk>("WebCustomerFollowUpModel.FK_stok_Renk", "Renk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Renk>("WebCustomerFollowUpModel.FK_stok_Renk", "Renk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Renk> RenkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Renk>("WebCustomerFollowUpModel.FK_stok_Renk", "Renk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Renk>("WebCustomerFollowUpModel.FK_stok_Renk", "Renk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Urun", "Urun")]
        public Urun Urun
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Urun>("WebCustomerFollowUpModel.FK_stok_Urun", "Urun").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Urun>("WebCustomerFollowUpModel.FK_stok_Urun", "Urun").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Urun> UrunReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Urun>("WebCustomerFollowUpModel.FK_stok_Urun", "Urun");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Urun>("WebCustomerFollowUpModel.FK_stok_Urun", "Urun", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_Satis_stok", "Satis")]
        public EntityCollection<Satis> Satis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Satis>("WebCustomerFollowUpModel.FK_Satis_stok", "Satis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Satis>("WebCustomerFollowUpModel.FK_Satis_stok", "Satis", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebCustomerFollowUpModel", Name="Urun")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Urun : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Urun object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Urun CreateUrun(global::System.Int32 id)
        {
            Urun urun = new Urun();
            urun.id = id;
            return urun;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String urun1
        {
            get
            {
                return _urun1;
            }
            set
            {
                Onurun1Changing(value);
                ReportPropertyChanging("urun1");
                _urun1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("urun1");
                Onurun1Changed();
            }
        }
        private global::System.String _urun1;
        partial void Onurun1Changing(global::System.String value);
        partial void Onurun1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebCustomerFollowUpModel", "FK_stok_Urun", "stok")]
        public EntityCollection<stok> stok
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Urun", "stok");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stok>("WebCustomerFollowUpModel.FK_stok_Urun", "stok", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
